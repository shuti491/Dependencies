name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      matrix:
        project: [PrjDep2, PrjDep3, prjdep4, prjdep5]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
          python-version: '3.x'

    - name: Wait for MySQL to be ready
      run: |
          until mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done
   
    # - name: Install dependencies
    #   run: |
    #       python -m pip install --upgrade pip
    #       pip install -r requirements.txt

    # - name: Run DB-based POM Generator
    #   env:
    #       DB_HOST: 127.0.0.1
    #       DB_PORT: 3306
    #       DB_USER: root
    #       DB_PASS: root
    #       DB_NAME: mydb
    #   run: python generate_pom.py
    
    - name: Set up Maven settings.xml
      run: |
          mkdir -p ~/.m2
          echo '<settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ secrets.GITHUB_ACTOR }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Build with Maven
      run: mvn clean install
      working-directory: ./${{ matrix.project }}
  
    - name: List files after build
      run: ls -R ./${{ matrix.project }}/target
  
    - name: Upload JAR as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}-jar
        path: ./${{ matrix.project }}/target/*.jar

    - name: Push JAR to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.run_number }}
        name: "${{ matrix.project }} Release ${{ github.run_number }}"
        files: ./${{ matrix.project }}/target/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to GitHub Packages
      run: mvn deploy -X
      working-directory: ./${{ matrix.project }}
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

   

